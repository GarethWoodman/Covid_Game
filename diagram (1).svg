<svg xmlns="http://www.w3.org/2000/svg" id="mainsvg" width="2808.1109375" height="1189.1171875" viewBox="-10 -10 2552.828125 1081.015625"><defs><marker id="arrow" viewBox="0 0 10 10" refX="10" refY="5" markerWidth="5" markerHeight="5" orient="auto-start-reverse" fill="black"><path d="M 0 0 L 10 5 L 0 10 z"/></marker><filter id="shadowOLD" x="-50%" y="-50%" width="250%" height="250%"><feDropShadow flood-color="black" flood-opacity="0.3" dx="1" dy="1" stdDeviation="2"> </feDropShadow></filter><filter id="shadow-path" filterUnits="userSpaceOnUse" x="-10" y="-10" width="2552.828125px" height="1081.015625px"><feDropShadow flood-color="black" flood-opacity="0.1" dx="1" dy="1" stdDeviation="1"> </feDropShadow></filter><filter id="shadow" filterUnits="userSpaceOnUse" x="-10" y="-10" width="2652.828125px" height="1181.015625px"><feDropShadow flood-color="black" flood-opacity="0.1" dx="1" dy="1" stdDeviation="1"> </feDropShadow></filter></defs><rect x="-10" y="-10" width="2552.828125" height="1081.015625" fill="#fff"/><g transform="translate(0, 0)"><rect width="72.90625" height="33.828125" stroke="black" fill="white" stroke-width="2" transform="translate(0, 0)" rx="3"/><text fill="black" font-size="16" font-weight="normal" transform="translate(8, 8)" alignment-baseline="middle" font-family="Arial"><tspan x="0" dy="16" font-family="Arial" font-size="16" font-weight="normal">browser</tspan></text></g><g transform="translate(158.4931640625, 0)"><rect width="70.25" height="33.828125" stroke="black" fill="white" stroke-width="2" transform="translate(0, 0)" rx="3"/><text fill="black" font-size="16" font-weight="normal" transform="translate(8, 8)" alignment-baseline="middle" font-family="Arial"><tspan x="0" dy="16" font-family="Arial" font-size="16" font-weight="normal">index.js</tspan></text></g><g transform="translate(970.70703125, 0)"><rect width="72.0234375" height="33.828125" stroke="black" fill="white" stroke-width="2" transform="translate(0, 0)" rx="3"/><text fill="black" font-size="16" font-weight="normal" transform="translate(8, 8)" alignment-baseline="middle" font-family="Arial"><tspan x="0" dy="16" font-family="Arial" font-size="16" font-weight="normal">game.js</tspan></text></g><g transform="translate(1734.3076171875, 0)"><rect width="64.90625" height="33.828125" stroke="black" fill="white" stroke-width="2" transform="translate(0, 0)" rx="3"/><text fill="black" font-size="16" font-weight="normal" transform="translate(8, 8)" alignment-baseline="middle" font-family="Arial"><tspan x="0" dy="16" font-family="Arial" font-size="16" font-weight="normal">level.js</tspan></text></g><g transform="translate(1823.2138671875, 0)"><rect width="65.78125" height="33.828125" stroke="black" fill="white" stroke-width="2" transform="translate(0, 0)" rx="3"/><text fill="black" font-size="16" font-weight="normal" transform="translate(8, 8)" alignment-baseline="middle" font-family="Arial"><tspan x="0" dy="16" font-family="Arial" font-size="16" font-weight="normal">brick.js</tspan></text></g><g transform="translate(2138.5546875, 0)"><rect width="130.7109375" height="33.828125" stroke="black" fill="white" stroke-width="2" transform="translate(0, 0)" rx="3"/><text fill="black" font-size="16" font-weight="normal" transform="translate(8, 8)" alignment-baseline="middle" font-family="Arial"><tspan x="0" dy="16" font-family="Arial" font-size="16" font-weight="normal">detectCollision()</tspan></text></g><path d="M 36.453125,73.65625 L 193.6181640625 73.65625" fill="none" stroke="black" stroke-dasharray="none" stroke-width="2" marker-end="url(#arrow)"/><path d="M 193.6181640625,81.65625 L 207.6181640625 81.65625 L 207.6181640625 105.484375 L 193.6181640625 105.484375" fill="none" stroke="black" stroke-dasharray="none" stroke-width="2" marker-end="url(#arrow)"/><path d="M 193.6181640625,145.3125 L 1006.71875 145.3125" fill="none" stroke="black" stroke-dasharray="none" stroke-width="2" marker-end="url(#arrow)"/><path d="M 1006.71875,181.140625 L 193.6181640625 181.140625" fill="none" stroke="black" stroke-dasharray="4,4" stroke-width="2" marker-end="url(#arrow)"/><path d="M 1006.71875,216.96875 L 193.6181640625 216.96875" fill="none" stroke="black" stroke-dasharray="4,4" stroke-width="2" marker-end="url(#arrow)"/><path d="M 193.6181640625,252.796875 L 1006.71875 252.796875" fill="none" stroke="black" stroke-dasharray="none" stroke-width="2" marker-end="url(#arrow)"/><path d="M 1006.71875,260.796875 L 1020.71875 260.796875 L 1020.71875 284.625 L 1006.71875 284.625" fill="none" stroke="black" stroke-dasharray="none" stroke-width="2" marker-end="url(#arrow)"/><path d="M 1006.71875,324.453125 L 1766.7607421875 324.453125" fill="none" stroke="black" stroke-dasharray="none" stroke-width="2" marker-end="url(#arrow)"/><path d="M 1766.7607421875,360.28125 L 1006.71875 360.28125" fill="none" stroke="black" stroke-dasharray="4,4" stroke-width="2" marker-end="url(#arrow)"/><path d="M 1006.71875,368.28125 L 1020.71875 368.28125 L 1020.71875 392.109375 L 1006.71875 392.109375" fill="none" stroke="black" stroke-dasharray="none" stroke-width="2" marker-end="url(#arrow)"/><path d="M 193.6181640625,431.9375 L 1006.71875 431.9375" fill="none" stroke="black" stroke-dasharray="none" stroke-width="2" marker-end="url(#arrow)"/><path d="M 193.6181640625,467.765625 L 1006.71875 467.765625" fill="none" stroke="black" stroke-dasharray="none" stroke-width="2" marker-end="url(#arrow)"/><path d="M 1006.71875,475.765625 L 1020.71875 475.765625 L 1020.71875 499.59375 L 1006.71875 499.59375" fill="none" stroke="black" stroke-dasharray="none" stroke-width="2" marker-end="url(#arrow)"/><path d="M 1006.71875,511.59375 L 1020.71875 511.59375 L 1020.71875 535.421875 L 1006.71875 535.421875" fill="none" stroke="black" stroke-dasharray="none" stroke-width="2" marker-end="url(#arrow)"/><path d="M 1006.71875,575.25 L 1856.1044921875 575.25" fill="none" stroke="black" stroke-dasharray="none" stroke-width="2" marker-end="url(#arrow)"/><path d="M 1856.1044921875,611.078125 L 2203.91015625 611.078125" fill="none" stroke="black" stroke-dasharray="none" stroke-width="2" marker-end="url(#arrow)"/><path d="M 2203.91015625,619.078125 L 2217.91015625 619.078125 L 2217.91015625 642.90625 L 2203.91015625 642.90625" fill="none" stroke="black" stroke-dasharray="none" stroke-width="2" marker-end="url(#arrow)"/><path d="M 2203.91015625,682.734375 L 1856.1044921875 682.734375" fill="none" stroke="black" stroke-dasharray="4,4" stroke-width="2" marker-end="url(#arrow)"/><path d="M 1856.1044921875,690.734375 L 1870.1044921875 690.734375 L 1870.1044921875 714.5625 L 1856.1044921875 714.5625" fill="none" stroke="black" stroke-dasharray="none" stroke-width="2" marker-end="url(#arrow)"/><path d="M 1856.1044921875,754.390625 L 1006.71875 754.390625" fill="none" stroke="black" stroke-dasharray="4,4" stroke-width="2" marker-end="url(#arrow)"/><path d="M 1006.71875,762.390625 L 1020.71875 762.390625 L 1020.71875 786.21875 L 1006.71875 786.21875" fill="none" stroke="black" stroke-dasharray="none" stroke-width="2" marker-end="url(#arrow)"/><path d="M 1006.71875,826.046875 L 193.6181640625 826.046875" fill="none" stroke="black" stroke-dasharray="4,4" stroke-width="2" marker-end="url(#arrow)"/><path d="M 193.6181640625,861.875 L 1006.71875 861.875" fill="none" stroke="black" stroke-dasharray="none" stroke-width="2" marker-end="url(#arrow)"/><path d="M 1006.71875,869.875 L 1020.71875 869.875 L 1020.71875 893.703125 L 1006.71875 893.703125" fill="none" stroke="black" stroke-dasharray="4,4" stroke-width="2" marker-end="url(#arrow)"/><path d="M 1006.71875,933.53125 L 1856.1044921875 933.53125" fill="none" stroke="black" stroke-dasharray="none" stroke-width="2" marker-end="url(#arrow)"/><path d="M 1856.1044921875,969.359375 L 1006.71875 969.359375" fill="none" stroke="black" stroke-dasharray="4,4" stroke-width="2" marker-end="url(#arrow)"/><path d="M 1006.71875,1005.1875 L 193.6181640625 1005.1875" fill="none" stroke="black" stroke-dasharray="4,4" stroke-width="2" marker-end="url(#arrow)"/><path d="M 193.6181640625,1013.1875 L 207.6181640625 1013.1875 L 207.6181640625 1037.015625 L 193.6181640625 1037.015625" fill="none" stroke="black" stroke-dasharray="none" stroke-width="2" marker-end="url(#arrow)"/><path d="M 36.453125,33.828125 L 36.453125 1061.015625" fill="none" stroke="black" stroke-dasharray="none" stroke-width="2"/><path d="M 193.6181640625,33.828125 L 193.6181640625 1061.015625" fill="none" stroke="black" stroke-dasharray="none" stroke-width="2"/><path d="M 1006.71875,33.828125 L 1006.71875 1061.015625" fill="none" stroke="black" stroke-dasharray="none" stroke-width="2"/><path d="M 1766.7607421875,33.828125 L 1766.7607421875 1061.015625" fill="none" stroke="black" stroke-dasharray="none" stroke-width="2"/><path d="M 1856.1044921875,33.828125 L 1856.1044921875 1061.015625" fill="none" stroke="black" stroke-dasharray="none" stroke-width="2"/><path d="M 2203.91015625,33.828125 L 2203.91015625 1061.015625" fill="none" stroke="black" stroke-dasharray="none" stroke-width="2"/><g transform="translate(60.453125, 45.828125)"><rect width="109.1650390625" height="23.828125" stroke="none" fill="white" stroke-width="0" transform="translate(0, 0)" rx="2"/><text fill="black" font-size="14" font-weight="normal" transform="translate(4, 4)" alignment-baseline="middle" font-family="Arial"><tspan x="0" dy="14" font-family="Arial" font-size="14" font-weight="normal">loads index.html</tspan></text></g><g transform="translate(213.6181640625, 81.65625)"><rect width="94.392578125" height="23.828125" stroke="none" fill="white" stroke-width="0" transform="translate(0, 0)" rx="2"/><text fill="black" font-size="14" font-weight="normal" transform="translate(4, 4)" alignment-baseline="middle" font-family="Arial"><tspan x="0" dy="14" font-family="Arial" font-size="14" font-weight="normal">Loads canvas</tspan></text></g><g transform="translate(536.83251953125, 117.484375)"><rect width="126.671875" height="23.828125" stroke="none" fill="white" stroke-width="0" transform="translate(0, 0)" rx="2"/><text fill="black" font-size="14" font-weight="normal" transform="translate(4, 4)" alignment-baseline="middle" font-family="Arial"><tspan x="0" dy="14" font-family="Arial" font-size="14" font-weight="normal">game = new Game</tspan></text></g><g transform="translate(348.51953125, 153.3125)"><rect width="503.2978515625" height="23.828125" stroke="none" fill="white" stroke-width="0" transform="translate(0, 0)" rx="2"/><text fill="black" font-size="14" font-weight="normal" transform="translate(4, 4)" alignment-baseline="middle" font-family="Arial"><tspan x="0" dy="14" font-family="Arial" font-size="14" font-weight="normal">New instance WITH instanses of ball/ paddle/ brick &lt; all these are passed SELF</tspan></text></g><g transform="translate(465.82421875, 189.140625)"><rect width="268.6884765625" height="23.828125" stroke="none" fill="white" stroke-width="0" transform="translate(0, 0)" rx="2"/><text fill="black" font-size="14" font-weight="normal" transform="translate(4, 4)" alignment-baseline="middle" font-family="Arial"><tspan x="0" dy="14" font-family="Arial" font-size="14" font-weight="normal">CONST: pause, running, menu, gameover</tspan></text></g><g transform="translate(558.4375, 224.96875)"><rect width="83.4619140625" height="23.828125" stroke="none" fill="white" stroke-width="0" transform="translate(0, 0)" rx="2"/><text fill="black" font-size="14" font-weight="normal" transform="translate(4, 4)" alignment-baseline="middle" font-family="Arial"><tspan x="0" dy="14" font-family="Arial" font-size="14" font-weight="normal">game.start()</tspan></text></g><g transform="translate(1026.71875, 260.796875)"><rect width="174.5166015625" height="23.828125" stroke="none" fill="white" stroke-width="0" transform="translate(0, 0)" rx="2"/><text fill="black" font-size="14" font-weight="normal" transform="translate(4, 4)" alignment-baseline="middle" font-family="Arial"><tspan x="0" dy="14" font-family="Arial" font-size="14" font-weight="normal">Creates array of all objects</tspan></text></g><g transform="translate(1281.181640625, 296.625)"><rect width="211.1162109375" height="23.828125" stroke="none" fill="white" stroke-width="0" transform="translate(0, 0)" rx="2"/><text fill="black" font-size="14" font-weight="normal" transform="translate(4, 4)" alignment-baseline="middle" font-family="Arial"><tspan x="0" dy="14" font-family="Arial" font-size="14" font-weight="normal">buildLevel() i.e. plotting obsacles</tspan></text></g><g transform="translate(1301.41259765625, 332.453125)"><rect width="170.654296875" height="23.828125" stroke="none" fill="white" stroke-width="0" transform="translate(0, 0)" rx="2"/><text fill="black" font-size="14" font-weight="normal" transform="translate(4, 4)" alignment-baseline="middle" font-family="Arial"><tspan x="0" dy="14" font-family="Arial" font-size="14" font-weight="normal">Returns the design/ layout</tspan></text></g><g transform="translate(1026.71875, 368.28125)"><rect width="295.9501953125" height="23.828125" stroke="none" fill="white" stroke-width="0" transform="translate(0, 0)" rx="2"/><text fill="black" font-size="14" font-weight="normal" transform="translate(4, 4)" alignment-baseline="middle" font-family="Arial"><tspan x="0" dy="14" font-family="Arial" font-size="14" font-weight="normal">state ==== running, Grabs constructed objects</tspan></text></g><g transform="translate(217.6181640625, 404.109375)"><rect width="765.1005859375" height="23.828125" stroke="none" fill="white" stroke-width="0" transform="translate(0, 0)" rx="2"/><text fill="black" font-size="14" font-weight="normal" transform="translate(4, 4)" alignment-baseline="middle" font-family="Arial"><tspan x="0" dy="14" font-family="Arial" font-size="14" font-weight="normal">When a new frame is ready it calls game loop with time stamp. Game Loop(delta time): clear, game.update(), game.draw()</tspan></text></g><g transform="translate(503.05615234375, 439.9375)"><rect width="194.224609375" height="23.828125" stroke="none" fill="white" stroke-width="0" transform="translate(0, 0)" rx="2"/><text fill="black" font-size="14" font-weight="normal" transform="translate(4, 4)" alignment-baseline="middle" font-family="Arial"><tspan x="0" dy="14" font-family="Arial" font-size="14" font-weight="normal">START LOOP: game.update()</tspan></text></g><g transform="translate(1026.71875, 475.765625)"><rect width="274.642578125" height="23.828125" stroke="none" fill="white" stroke-width="0" transform="translate(0, 0)" rx="2"/><text fill="black" font-size="14" font-weight="normal" transform="translate(4, 4)" alignment-baseline="middle" font-family="Arial"><tspan x="0" dy="14" font-family="Arial" font-size="14" font-weight="normal">UPDATE(): if paused / menu return nothing</tspan></text></g><g transform="translate(1026.71875, 511.59375)"><rect width="548.1552734375" height="23.828125" stroke="none" fill="white" stroke-width="0" transform="translate(0, 0)" rx="2"/><text fill="black" font-size="14" font-weight="normal" transform="translate(4, 4)" alignment-baseline="middle" font-family="Arial"><tspan x="0" dy="14" font-family="Arial" font-size="14" font-weight="normal">UPDATE(): else take this array of instantised objects &gt; and calls their update(deltatime)</tspan></text></g><g transform="translate(1339.48095703125, 547.421875)"><rect width="183.861328125" height="23.828125" stroke="none" fill="white" stroke-width="0" transform="translate(0, 0)" rx="2"/><text fill="black" font-size="14" font-weight="normal" transform="translate(4, 4)" alignment-baseline="middle" font-family="Arial"><tspan x="0" dy="14" font-family="Arial" font-size="14" font-weight="normal">(in for Each) calling update()</tspan></text></g><g transform="translate(1880.1044921875, 583.25)"><rect width="299.8056640625" height="23.828125" stroke="none" fill="white" stroke-width="0" transform="translate(0, 0)" rx="2"/><text fill="black" font-size="14" font-weight="normal" transform="translate(4, 4)" alignment-baseline="middle" font-family="Arial"><tspan x="0" dy="14" font-family="Arial" font-size="14" font-weight="normal">(in update) if detectcollison(this.game.ball, this)</tspan></text></g><g transform="translate(2223.91015625, 619.078125)"><rect width="140.2822265625" height="23.828125" stroke="none" fill="white" stroke-width="0" transform="translate(0, 0)" rx="2"/><text fill="black" font-size="14" font-weight="normal" transform="translate(4, 4)" alignment-baseline="middle" font-family="Arial"><tspan x="0" dy="14" font-family="Arial" font-size="14" font-weight="normal">Cross ref the position</tspan></text></g><g transform="translate(1968.814453125, 654.90625)"><rect width="122.3857421875" height="23.828125" stroke="none" fill="white" stroke-width="0" transform="translate(0, 0)" rx="2"/><text fill="black" font-size="14" font-weight="normal" transform="translate(4, 4)" alignment-baseline="middle" font-family="Arial"><tspan x="0" dy="14" font-family="Arial" font-size="14" font-weight="normal">return true or false</tspan></text></g><g transform="translate(1876.1044921875, 690.734375)"><rect width="656.7236328125" height="23.828125" stroke="none" fill="white" stroke-width="0" transform="translate(0, 0)" rx="2"/><text fill="black" font-size="14" font-weight="normal" transform="translate(4, 4)" alignment-baseline="middle" font-family="Arial"><tspan x="0" dy="14" font-family="Arial" font-size="14" font-weight="normal">(UPDATE) if true this.game.ball change speed / direction &amp;&amp; mark brick for deletion or false does nothing</tspan></text></g><g transform="translate(1294.7021484375, 726.5625)"><rect width="273.4189453125" height="23.828125" stroke="none" fill="white" stroke-width="0" transform="translate(0, 0)" rx="2"/><text fill="black" font-size="14" font-weight="normal" transform="translate(4, 4)" alignment-baseline="middle" font-family="Arial"><tspan x="0" dy="14" font-family="Arial" font-size="14" font-weight="normal">returns the update info on ball and deletion</tspan></text></g><g transform="translate(1026.71875, 762.390625)"><rect width="370.6259765625" height="23.828125" stroke="none" fill="white" stroke-width="0" transform="translate(0, 0)" rx="2"/><text fill="black" font-size="14" font-weight="normal" transform="translate(4, 4)" alignment-baseline="middle" font-family="Arial"><tspan x="0" dy="14" font-family="Arial" font-size="14" font-weight="normal">Updates the objects array removing all marked for deletion</tspan></text></g><g transform="translate(430.1474609375, 798.21875)"><rect width="340.0419921875" height="23.828125" stroke="none" fill="white" stroke-width="0" transform="translate(0, 0)" rx="2"/><text fill="black" font-size="14" font-weight="normal" transform="translate(4, 4)" alignment-baseline="middle" font-family="Arial"><tspan x="0" dy="14" font-family="Arial" font-size="14" font-weight="normal">the x / y axis are all different // the states are changed</tspan></text></g><g transform="translate(556.87890625, 834.046875)"><rect width="86.5791015625" height="23.828125" stroke="none" fill="white" stroke-width="0" transform="translate(0, 0)" rx="2"/><text fill="black" font-size="14" font-weight="normal" transform="translate(4, 4)" alignment-baseline="middle" font-family="Arial"><tspan x="0" dy="14" font-family="Arial" font-size="14" font-weight="normal">game.draw()</tspan></text></g><g transform="translate(1026.71875, 869.875)"><rect width="202.5166015625" height="23.828125" stroke="none" fill="white" stroke-width="0" transform="translate(0, 0)" rx="2"/><text fill="black" font-size="14" font-weight="normal" transform="translate(4, 4)" alignment-baseline="middle" font-family="Arial"><tspan x="0" dy="14" font-family="Arial" font-size="14" font-weight="normal">iterating over NEW object array</tspan></text></g><g transform="translate(1342.98779296875, 905.703125)"><rect width="176.84765625" height="23.828125" stroke="none" fill="white" stroke-width="0" transform="translate(0, 0)" rx="2"/><text fill="black" font-size="14" font-weight="normal" transform="translate(4, 4)" alignment-baseline="middle" font-family="Arial"><tspan x="0" dy="14" font-family="Arial" font-size="14" font-weight="normal">calling draw() from the loop</tspan></text></g><g transform="translate(1030.71875, 941.53125)"><rect width="801.3857421875" height="23.828125" stroke="none" fill="white" stroke-width="0" transform="translate(0, 0)" rx="2"/><text fill="black" font-size="14" font-weight="normal" transform="translate(4, 4)" alignment-baseline="middle" font-family="Arial"><tspan x="0" dy="14" font-family="Arial" font-size="14" font-weight="normal">returning draw(ctx) (ctx is something to do with canvas) calls the ctx.(thisimage, this.positionx &amp; y, width, height i.e. constructors)</tspan></text></g><g transform="translate(544.42724609375, 977.359375)"><rect width="111.482421875" height="23.828125" stroke="none" fill="white" stroke-width="0" transform="translate(0, 0)" rx="2"/><text fill="black" font-size="14" font-weight="normal" transform="translate(4, 4)" alignment-baseline="middle" font-family="Arial"><tspan x="0" dy="14" font-family="Arial" font-size="14" font-weight="normal">return the draw()</tspan></text></g><g transform="translate(213.6181640625, 1013.1875)"><rect width="372.1162109375" height="23.828125" stroke="none" fill="white" stroke-width="0" transform="translate(0, 0)" rx="2"/><text fill="black" font-size="14" font-weight="normal" transform="translate(4, 4)" alignment-baseline="middle" font-family="Arial"><tspan x="0" dy="14" font-family="Arial" font-size="14" font-weight="normal">FINISHING THE LOOP - requestion animationFrame(loop)</tspan></text></g></svg>